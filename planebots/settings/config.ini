[observer]

[overlays]
show_grid = True
grid_size = [5,5]
show_rejected_markers = True
show_markers = True
field_color = [255,255,255]
show_domain = True
show_limiter_hz = 20
show_positions = True
[detection]
limiter_hz = 1
;calibration_marker_ids = [3, 1, 2, 0]
;calibration_markers_mm = [[-45,335,0],[135,-45,0],[335,-45,0],[-45,135,0]]
;calibration_markers_mm = [[335,-45,0],[-45,135,0],[-45,335,0],[135,-45,0]]
;calibration_markers_orientation = [90, 90, 270, 0]
;calibration_outline_mm = [[0,0,0],[0,500,0],[-80,500,0],[-80,-80,0],[500,-80,0],[500,0,0]]
;marker_size = 60
;calibration_clockwise = True

calibration_marker_ids = [0, 1, 2, 3]
calibration_markers_mm = [[200.5,-69.5,12],[425.5,-69.5,12],[-69.5,200.5,12],[-69.5,425.5,12]]
;calibration_outline_mm = [[0,0,0],[0,500,0],[-80,500,0],[-80,-80,0],[500,-80,0],[500,0,0]]
calibration_outline_mm = [[-20,-20,0],[-20,480,0],[-100,480,0],[-100,-100,0],[480,-100,0],[480,-20,0]]
calibration_markers_orientation = [90, 90, 90, 90]
marker_size = 50
calibration_clockwise = True
field_size_mm = [550,550]
[gui_ueye]
use_livefeed = True
load_parameters = True
send_udp = True
send_port = 25666
[ueye_terminal]
;Source can be: "still" a still image with only corner markers, "still_agents", a still with agents, or "ueye" for the GigUeye cam
source = "still"
;Frame limit in HZ
limiter_hz = 0.5
debug = True
[potential_field]
kw = 2.5
kv = 0.1
;PNP pose estimation, camera position estimation, and GUI options
[ueye]
;calibration_markers_mm (first three are used for 2d 3d correspondance plane
load_parameters_EEPROM = True
camera_parameterfile = camera_parameters_gigueye.npz

[gctronic]
;elisa_numbers = [3656,3655,3533,3333]
; elisa_numbers = [3716,3656,3715,3728,3658,3533,3655,3819]
elisa_numbers = [3819,3658,3655]
;elisa_ids = [13,6,15]
; elisa_ids = [13,15,14,7,10,6,12,8]
; elisa_ids = [13,15,14,7]
elisa_ids = [7,8,13]
elisa3_frequency_hz = 50
terminal_out = True
debug = True


;resize the frame before display with this factor:
resize_factor = 3
detect_markers = True
undistort_whole_image = True
show_stats_below = True
draw_marker_detection = True
draw_positions = False
send_to_matlab = False
send_elisa = True

send_to_custom = True
custom_send_port = 27016
custom_send_address = localhost
recieve_udp_port = 22056
;config file to feed in parameters to the main recognition
[manual_control]
;calibration_marker_ids = [5,0,4,2]
;Positions of the markers in the ground reference triangle v1.0
;Positions of the markers in the ground reference triangle v1.0
;calibration_markers_mm = [[1000,1000,500],[0,1000,500],[0,0,500],[1000,0,500]]
;parameter file with distortion parameters

[messaging]
wss_bridge_addr = 0.0.0.0
wss_bridge_send_port = 8765
wss_bridge_recv_port = 8766
udp_bridge_addr = localhost
;udp_bridge_addr = 0.0.0.0
udp_matlab_recv_port = 25646
udp_bridge_recv_port = 27016
udp_bridge_send_port = 27015
udp_interval = 0.1
websocket_interval = 0.03
bridge_debug = False
[mousefollow]
drawinterval = 0.005
ctrlinterval = 0.005
sendinterval = 0.2
t_draw = 0
t_ctrl = 0
t_send = 0
info = True
debug = True
lambda = 50
[gamepad]
;windows = True
;linux = false
mids = [13,0,15]
display_inputs = True
v_scale = 3
omega_scale = 3
send_to_elisa = False
send_to_ueye = True
send_to_ueye_hz = 50
send_to_ueye_port = 22056
;corresponding elisa3 addresses
elisa3 = [3658,3655,3533]
elisa3_frequency_hz = 50
;Maximum output to
elisa3_max_speed = 4
;legacy miabot connection:
send_to_miabot = False
miabot_port = "COM8"
miabot_frequency_hz = 50
;serial_speed = 115200
miabot_serial_speed = 1000000
;command_frequency_hz =50
draw_output = True
draw_frequency_hz = 20
draw_viewport_size = [400,800]
draw_domain_start = [200,400]
draw_sprites = True
pretty_text = True
sprite_color = [122,0,0]
draw_color = True
send_to_ws_bridge = False
ws_bridge_frequency_hz = 50
send_udp =
send_to_matlab_bridge = False
matlab_frequency_hz = 50
[video_processing]
;Always mention the outermost markers first, these are used first for projecting, the last one is used for verifying results
calibration_marker_ids = [3, 1, 2, 0]
;calibration_markers_mm (first three are used for 2d 3d correspondance plane
calibration_markers_mm = [[-45,335,0],[135,-45,0],[335,-45,0],[-45,135,0]]
;calibration_marker_ids = [5,0,4]
;calibration_markers_mm = [[1000,1000,500],[0,1000,500],[0,0,500]]
domain_mm = [[0,0],[1000,0],[1000,1000],[0,1000]]
window_size = [900,900]
margin = 20
subwindows = [2,2]
subwindow_size = [300,300]
sidebar_width = 200
camera_parameterfile = camera_parameters_gigueye.npz
send_udp_camera_pose = True
send_udp_agent_pose = True
show_coords = True
reproject_markers = True
;Whether to use 3 markers to detect pose and estimate the correct one using the previous pose
use_pnp_3 = True
loop = True
start_frame = 1
show_framecount = True
debug = True
text_color = [255,255,0]
draw_aruco = True
draw_markers_on_raw = True
draw_grid_on_raw = True
resize_factor = 2
pause_per_frame = False

[default]
gui_max_pixels = [900,1000]
domain = [1000,2000]
domain_center = [500,1000]
log_level = debug
;nodelist = [5,0,4,2]
nodelist = [1, 2, 3, 0]


[position_tester]
sendinterval = 2
;modes: random/lissajous/
mode = random
agents = 2
color = [122,122,0]
domain_px = [50,250,50,450]
domain_mm = [0,1000,0,2000]

[frame_processing]
resize_factor = 2

[marker_pngs]
borderwidth = 32
picwidth = 256
n_markers = 50
seperate_files = true